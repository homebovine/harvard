res
res <- 0
res
apply(res, 2, mean, na.rm = T)
apply(res, 2, median, na.rm = T)
nk
nk <- 2
debug(iniestreal)
n
n
p
n
n
n
n
n
n
n
knots1
 n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
nk <- 10
undebug(iniestreal)
c
res
nk <- 5
res
q()
y
integrate
q()
y
simwei2
nk
pl
nk <- 12
pl
res
res
nk <- 7
pl <- 7
res
simwei2
res
apply(res, 2, median)
res
res
margpartial1
res
res
res
res
res
apply(res, 2, median)
theta
table(survData[, 2]. survData[, 4])
table(survData[, 2], survData[, 4])
table(survData[, 2], survData[, 4])
res
res
nk
res
res
res
res
res
res
res
simwei2
res
res
table(survData[, 2], survData[, 4])
simwei2
res
res
covmy
res
res <- rbind(res, iniestreal1(theta, bb, resp, covmy)$par)
res
res
debug(iniestreal1)
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
knots
knots1
knots1
knots2
knots
knots3
Q
res
res
debug(iniestreal1)
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
dA1
hbz10$time
knots1
dA1
log(hbz10$hazard)
hbz10
bz10
table(survData[, 2], survData[, 4])
nrow(bz10)
bz10
nrow(bz10)
resp[, "d1"]
str(bz10)
dA1
dA1
dA2
dA3
debug(margpartial)
debug(margpartial1)
n
n
n
n
n
n
n
n
n
ldA1
n
ldA2
ldA3
lambda1
lambda2
lambda3
dtime1
vl
c
n
n
n
n
n
n
n
n
n
n
ldA1
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
res
pl
n
n
n
n
n
n
n
n
n
n
n
ldA1
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
undebug(margpartial1)
c
lambda1
dA1
dA2
Q
res
res
undebug(margpartial)
c
res
res
res
nk
apply(res, 2, median)
apply(res, 2, mean)
debug(margpartial1)
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
debug(margpartial1)
rname1
q()
Q
debug(iniestreal)
res <- iniestreal(theta, bb, resp, covmy)$par
n
n
n
n
n
n
n
n
n
knots1
n
n
n
pl
n
n
n
Bs1
n
Bs2
n
Bs3
n
n
n
n
lt
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
A1
n
n
n
n
n
sp1
n
sp2
n
n
n
n
n
n
debug(margpartial)
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
A
n
n
n
n
res
l
vl
mdA1
c
debug(margpartial1)
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
debug(margpartial1)
for(i in 1:10){
    survData <- simCpRsk(1000, p = 1, theta = 0.8, lambda1 = 2, lambda2 = 0.5, lambda3 = 1, kappa = 2,   beta1 = 0.2, beta2 = 0.2, beta3 = 0.2, covm =  as.matrix(rbinom(1000, 1, 0.4)) - 1/2, 3, 5)
if(sum(is.na(survData) > 0)){
    next
}
np <- ncol(survData)
n <- nrow(survData)
y1 <- pmin(survData[, 1], survData[, 3])
y2 <- survData[, 3]
d1 <- survData[, 2]
d2 <- survData[, 4]

v <- rep(0, n)
covmy <- matrix(survData[, (5 : np)], ncol =  np - 4)
   

       
resp <- cbind(d1, d2, y1, y2, v)
colnames(resp) <- cbind("d1", "d2", "y1", "y2", "v")
res <- rbind(res, iniestreal1(theta, bb, resp, covmy)$par)
    print(res[i, 3 * p + 3 * pl + 1])
   #

n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
res
Q
res
res
q()
y
simwei2
res
nk
nk <- 22
pl <- 22
res
res
res
res
q()
y
