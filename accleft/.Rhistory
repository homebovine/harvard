source("accleft.r")
 estm(theta, resp, covm, n, p)
debug(projscore)
 estm(theta, resp, covm, n, p)
n
n
n
sum(sapply(1:m, num, vg, vt, x, theta, v))/sum(sapply(1:m, dm, 
    vg, vt, x, theta, v))
vt
sum(sapply(1:m, num, vg, vt, x, theta, v))
 a
sum(sapply(1:m, num, vg, vt, x, theta, v))
debug(num)
sum(sapply(1:m, num, vg, vt, x, theta, v))
singlescore(vt, theta, x, vg[k], v) - a[, k]) 
singlescore(vt, theta, x, vg[k], v) - a[, k]
singlescore(vt, theta, x, vg[k], v)
a <- singlescore(vt, theta, x, vg[k], v)
a
Q
source("accleft.r")
estm(theta, resp, covm, n, p)
 mA)
mA
vg
 source("accleft.r")
estm(theta, resp, covm, n, p)
mA
ginv(mA)
library(MASS)
ginv(mA)
resp
covm
mb
ginv(mA) %*% t(mb)
source("accleft.r")
estm(theta, resp, covm, n, p)
mA
source("accleft.r")
estm(theta, resp, covm, n, p)
x
cn
i
resp[42, ]
covm[42, ]
covm[42]
cmptresp[42, ]
range(resp[, 1])
mb
debug(Amatx)
n
n
i
n
i
n
j
n
n
vtg
A(vtg)
debug(likelihood)
A(vtg)
n
n
vt1
n
n
n
n
n
n
n
n
n
n
n
str(t1)
n
n
d1
n
y1
n
d1
 hzd1(kappa1, alpha1, beta1,  y1, x, g)
g
g = 0.02
 hzd1(kappa1, alpha1, beta1,  y1, x, g)
x
str(y1)
log(g)
1/y1
 exp((trans1(t, alpha1)-t(beta1) %*% x-log(g))/kappa1) 
 exp((log(y1)-t(beta1) %*% x-log(g))/kappa1) 
 exp((log(y1)-t(beta1) %*% x-log(g))/kappa1)  * 1/y1
1/y1
str(y1)
Q
source("accleft.r")
estm(theta, resp, covm, n, p)
invA
mA
debug(Amatx)
n
undebug(Amatx)
estm(theta, resp, covm, n, p)
debug(Amatx)
x
g
vg
n
n
n
n
n
n
debug(A)
n
likelihood(vt, x, vg[j], theta, v) * vq[j] * likelihood(vt, 
        x, vg[i], theta, v)
v
v = 1
 likelihood(vt, x, vg[j], theta, v)
v = 0
 likelihood(vt, x, vg[j], theta, v)
vt
debug(likelihood)
n
n
n
n
vt1
n
vt
n
n
n
n
n
n
n
n
n
n
n
n
d1
n
y2
n
y1
n
hzd1(kappa1, alpha1, beta1, y1, x, g)
y1
g
x
g = 0.1
hzd1(kappa1, alpha1, beta1, y1, x, g)
g = 0.5
hzd1(kappa1, alpha1, beta1, y1, x, g)
debug(hzd1)
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
g
log(g)
 exp((trans1(t, alpha1) - t(beta1) %*% x - log(g))/kappa1)
1/t
1/ kappa1
 exp((trans1(t, alpha1) - t(beta1) %*% x - log(g))/kappa1) * 1/t
n
n
n
hzd2(kappa2, alpha2, beta2, y1, x, g)
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
hzd2(kappa2, alpha2, beta2, y1, x, g)
kappa2
hzd3(kappa3, alpha3, 
    beta3, y2, x, g)
 surv2(kappa2, alpha2, beta2, y1, x, g)
surv1(kappa1, alpha1, beta1, y1, x, 
    g)
apply(1/(1 - vt1), 1, prod)
(surv1(kappa1, alpha1, beta1, v, x, g) 
)
surv3(kappa3, alpha3, beta3,  y1, x, g) 
surv3(kappa3, alpha3, beta3,  y2, x, g) / surv3(kappa3, alpha3, beta3,  y1, x, g)
 surv3(kappa3, alpha3, beta3,  y2, x, g)
y2
y1
debug(surv3)
 surv3(kappa3, alpha3, beta3,  y2, x, g)
(trans3(t, alpha3) - log(g) - t(beta3) %*% x)/kappa3
exp((trans3(t, alpha3) - log(g) - t(beta3) %*% x)/kappa3)
g = 0
exp((trans3(t, alpha3) - log(g) - t(beta3) %*% x)/kappa3)
g = 0.2
exp((trans3(t, alpha3) - log(g) - t(beta3) %*% x)/kappa3)
exp(-exp((trans3(t, alpha3) - log(g) - t(beta3) %*% x)/kappa3))
kappa3 = 10
exp((trans3(t, alpha3) - log(g) - t(beta3) %*% x)/kappa3)
Q
source("accleft.r")
resp
survData[97, 3]
source("accleft.r")
estm(theta, resp, covm, n, p)
mA
source("accleft.r")
source("accleft.r")
estm(theta, resp, covm, n, p)
missingscore(1, theta, missresp, cmptresp, mn, cn, p, misscovm, cmptcovm, cmptscore)
ht <- n^(-1/3)
hx = rep(ht, p)
hx
ht
ix
c
source("accleft.r")
debug(missingscore)
estm(theta, resp, covm, n, p)
n
n
n
n
c
source("accleft.r")
estm(theta, resp, covm, n, p)
n
n
source("accleft.r")
estm(theta, resp, covm, n, p)
debug(missingscore)
n
n
n
n
n
n
x
n
ix
c
source("accleft.r")
estm(theta, resp, covm, n, p)
debug(missingscore)
n
n
n
n
n
c
source("accleft.r")
estm(theta, resp, covm, n, p)
debug(missingscore)
n
n
n
n
cn
n
n
x
n
ix
length(ix)
Q
source("accleft.r")
estm(theta, resp, covm, n, p)
debug(missingscore)
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
 source("accleft.r")
estm(theta, resp, covm, n, p)
debug(missingscore)
n
n
n
n
n
n
n
n
n
n
n
n
n
n
cn
n
n
n
ix
c
n
n
cn
n
n
cn
n
n
y2
y1
cn
n
Q
source("accleft.r")
estm(theta, resp, covm, n, p)
debug(missingscore)
n
n
n
n
n
n
n
ix
n
n
n
n
n
n
n
n
n
n
ix
cmptresp[, "y1"]
cn
n
n
n
n
c
source("accleft.r")
estm(theta, resp, covm, n, p)
c
source("accleft.r")
estm(theta, resp, covm, n, p)
c
.Last.vlue
.Last.value
library(BB)
?dfsane
dfsane(theta, estm, method = 2, contorl = ls(), quiet = FALSE, resp, covm, n, p)
dfsane(theta, estm, method = 2, contorl = list(), quiet = FALSE, resp, covm, n, p)
dfsane(theta, estm, method = 2, control = list(), quiet = FALSE, resp, covm, n, p)
c
source("accleft.r")
source("accleft.r")
source("accleft.r")
source("accleft.r")
warnings()
source("accleft.r")
estm(theta, resp, covm, n, p)
cmptscore
str(cmpscore)
str(cmptscore)
cmptscore
temp <- lapply(1 : cn,completescore, theta, cmptresp, cn, p, cmptcovm, cmptv)
temp[1]
debug(projscore)
completescore(1, theta, cmptresp, cn, p, comptcovm, cmptv)
completescore(1, theta, cmptresp, cn, p, cmptcovm, cmptv)
n
a
sapply(1:m, num, vg, vt, x, theta, v)
n
n
sapply(1:m, num, vg, vt, x, theta, v)
sapply(1 : m, dm, vg, vt, x,   theta, v)
Q
source("accleft.r")
estm(theta, resp, covm, n, p)
 apply(rbind(cmptscore, missscore), 2, sum)
cmptscore
str(compscore)
completescore(1, theta, cmptresp, cn, p, cmptcovm, cmmptv)
completescore(1, theta, cmptresp, cn, p, cmptcovm, cmptv)
debug(completescore)
m
completescore(1, theta, cmptresp, cn, p, cmptcovm, cmptv)
debug(projscore)
n
n
n
n
n
n
n
a
n
Q
source("accleft.r")
estm(theta, resp, covm, n, p)
 apply(rbind(cmptscore, missscore), 2, sum)
cmptscore
str(cmptscore)
missscore
cmptscore[ix, ]* kerx(x, cmptcovm[ix, ], ht)
debug(missingscore)
missscore <- do.call(rbind, lapply(1 : mn, missingscore, theta, missresp, cmptresp, mn, cn, p, misscovm, cmptcovm, cmptscore, missv))
n
n
n
n
n
n
n
ix
n
n
n
n
n
n
n
n
n
ix
n
n
n
n
n
n
n
n
n
n
ix
cn
cmptresp[, "y1"]
n
n
ix
missscore
mn
q
missscore
score
theta
Q
source("accleft.r")
spg(theta, estm, gr=NULL, method=3, project=NULL, lower=rep(0.001, length(theta)), upper=Inf, projectArgs=NULL, control=list(), quiet=FALSE, resp, covm, n, p)
source("accleft.r")
source("accleft.r")
warnings()
estm1
estm1
estm
theta
