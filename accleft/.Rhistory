n
n
c
source("accleft.r")
estm(theta, resp, covm, n, p)
c
source("accleft.r")
estm(theta, resp, covm, n, p)
c
.Last.vlue
.Last.value
library(BB)
?dfsane
dfsane(theta, estm, method = 2, contorl = ls(), quiet = FALSE, resp, covm, n, p)
dfsane(theta, estm, method = 2, contorl = list(), quiet = FALSE, resp, covm, n, p)
dfsane(theta, estm, method = 2, control = list(), quiet = FALSE, resp, covm, n, p)
c
source("accleft.r")
source("accleft.r")
source("accleft.r")
source("accleft.r")
warnings()
source("accleft.r")
estm(theta, resp, covm, n, p)
cmptscore
str(cmpscore)
str(cmptscore)
cmptscore
temp <- lapply(1 : cn,completescore, theta, cmptresp, cn, p, cmptcovm, cmptv)
temp[1]
debug(projscore)
completescore(1, theta, cmptresp, cn, p, comptcovm, cmptv)
completescore(1, theta, cmptresp, cn, p, cmptcovm, cmptv)
n
a
sapply(1:m, num, vg, vt, x, theta, v)
n
n
sapply(1:m, num, vg, vt, x, theta, v)
sapply(1 : m, dm, vg, vt, x,   theta, v)
Q
source("accleft.r")
estm(theta, resp, covm, n, p)
 apply(rbind(cmptscore, missscore), 2, sum)
cmptscore
str(compscore)
completescore(1, theta, cmptresp, cn, p, cmptcovm, cmmptv)
completescore(1, theta, cmptresp, cn, p, cmptcovm, cmptv)
debug(completescore)
m
completescore(1, theta, cmptresp, cn, p, cmptcovm, cmptv)
debug(projscore)
n
n
n
n
n
n
n
a
n
Q
source("accleft.r")
estm(theta, resp, covm, n, p)
 apply(rbind(cmptscore, missscore), 2, sum)
cmptscore
str(cmptscore)
missscore
cmptscore[ix, ]* kerx(x, cmptcovm[ix, ], ht)
debug(missingscore)
missscore <- do.call(rbind, lapply(1 : mn, missingscore, theta, missresp, cmptresp, mn, cn, p, misscovm, cmptcovm, cmptscore, missv))
n
n
n
n
n
n
n
ix
n
n
n
n
n
n
n
n
n
ix
n
n
n
n
n
n
n
n
n
n
ix
cn
cmptresp[, "y1"]
n
n
ix
missscore
mn
q
missscore
score
theta
Q
source("accleft.r")
spg(theta, estm, gr=NULL, method=3, project=NULL, lower=rep(0.001, length(theta)), upper=Inf, projectArgs=NULL, control=list(), quiet=FALSE, resp, covm, n, p)
source("accleft.r")
source("accleft.r")
warnings()
estm1
estm1
estm
theta
survData
survData
load(paste("simdata/realdata", 1, itr, sep = "_"))
load(paste("simdata/realdata", 1, 1, sep = "_"))
survData
load(paste("simdata/realdata", 0, 1, sep = "_"))
survData
source("realrun.r")
tsRoot(1)
source("realrun.r")
tsRoot(1)
n
sourcE("realrun.r')
tsRoot(1)
sourcE("realrun.r")
tsRoot(1)
  C-c C-c
source("realrun.r")
tsRoot(1)
source("realrun.r")
tsRoot(1)
theta
tRoot(1)
tsRoot(1)
tsRoot(1)
nu
tsRoot(1)
res <- tsRoot(1)
warnings()
theta- <- tsRoot(1
theta0 <- tsRoot(1)
